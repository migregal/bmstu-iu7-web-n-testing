basePath: /api
definitions:
  LoginRequest:
    properties:
      email:
        example: my_awesome@email.com
        type: string
      password:
        example: Really, you're waiting for example?
        type: string
    required:
    - email
    - password
    type: object
  LoginResponse:
    properties:
      expire:
        example: "2022-03-20T17:00:01Z"
        type: string
      token:
        example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NDc...
        type: string
    type: object
  ModelStatInfoResponse:
    properties:
      edit:
        items:
          $ref: '#/definitions/modelsstat.StatInfo'
        type: array
      load:
        items:
          $ref: '#/definitions/modelsstat.StatInfo'
        type: array
    type: object
  RegistrationRequest:
    properties:
      email:
        example: my_awesome@email.com
        type: string
      fullname:
        example: John Smith
        type: string
      password:
        example: Really, you're waiting for example?
        type: string
      username:
        example: my_awesome_nickname
        type: string
    required:
    - email
    - fullname
    - password
    - username
    type: object
  Unauthorized:
    properties:
      message:
        example: user not found
        type: string
    type: object
  UserInfoResponse:
    properties:
      email:
        example: my_awesome@email.com
        type: string
      fullname:
        example: Ivanov Ivan Ivanovich
        type: string
      id:
        example: f6457bdf-4e67-4f05-9108-1cbc0fec9405
        type: string
      username:
        example: awesome_username
        type: string
    type: object
  UserStatInfoResponse:
    properties:
      edit:
        items:
          $ref: '#/definitions/usersstat.StatInfo'
        type: array
      registration:
        items:
          $ref: '#/definitions/usersstat.StatInfo'
        type: array
    type: object
  WeightStatInfoResponse:
    properties:
      edit:
        items:
          $ref: '#/definitions/weightsstat.StatInfo'
        type: array
      load:
        items:
          $ref: '#/definitions/weightsstat.StatInfo'
        type: array
    type: object
  layer.Info:
    properties:
      activation_func:
        type: string
      id:
        type: integer
      limit_func:
        type: string
    type: object
  link.Info:
    properties:
      from:
        type: integer
      id:
        type: integer
      to:
        type: integer
    type: object
  model.Info:
    properties:
      id:
        type: string
      owner_id:
        type: string
      structure:
        $ref: '#/definitions/structure.Info'
      title:
        type: string
    type: object
  modelsstat.StatInfo:
    properties:
      id:
        example: 3f8bf2a3-01cc-4c4a-9759-86cec9cf8da9
        type: string
      time:
        example: 2006-01-02T15:04:05Z07:00
        type: string
    type: object
  neuron.Info:
    properties:
      id:
        type: integer
      layer_id:
        type: integer
    type: object
  offset.Info:
    properties:
      id:
        type: integer
      neuron_id:
        type: integer
      offset:
        type: number
    type: object
  structure.Info:
    properties:
      id:
        type: string
      layers:
        items:
          $ref: '#/definitions/layer.Info'
        type: array
      links:
        items:
          $ref: '#/definitions/link.Info'
        type: array
      neurons:
        items:
          $ref: '#/definitions/neuron.Info'
        type: array
      title:
        type: string
      weights:
        items:
          $ref: '#/definitions/weights.Info'
        type: array
    type: object
  userblockUserResponse:
    properties:
      blocked_until:
        example: "2025-08-09T15:00:00.053Z"
        type: string
      id:
        example: f6457bdf-4e67-4f05-9108-1cbc0fec9405
        type: string
    type: object
  usersstat.StatInfo:
    properties:
      id:
        example: 3f8bf2a3-01cc-4c4a-9759-86cec9cf8da9
        type: string
      time:
        example: 2006-01-02T15:04:05Z07:00
        type: string
    type: object
  weight.Info:
    properties:
      id:
        type: integer
      link_id:
        type: integer
      weight:
        type: number
    type: object
  weights.Info:
    properties:
      id:
        type: string
      name:
        type: string
      offsets:
        items:
          $ref: '#/definitions/offset.Info'
        type: array
      weights:
        items:
          $ref: '#/definitions/weight.Info'
        type: array
    type: object
  weightsstat.StatInfo:
    properties:
      id:
        example: 3f8bf2a3-01cc-4c4a-9759-86cec9cf8da9
        type: string
      time:
        example: 2006-01-02T15:04:05Z07:00
        type: string
    type: object
host: localhost
info:
  contact: {}
  description: This is cube server.
  license:
    name: MIT
    url: https://mit-license.org/
  title: Cube API
  version: "1.0"
paths:
  /v1/blocks/users/{user_id}:
    delete:
      description: Deletes user block info by user id
      parameters:
      - description: User ID to unblock
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: User unblocked
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Failed to delete user block info from storage
      security:
      - ApiKeyAuth: []
      summary: Delete user block info
      tags:
      - blocks
    get:
      description: Find such users info as id and block time
      parameters:
      - description: UserId to search for
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Users block info found
          schema:
            $ref: '#/definitions/userblockUserResponse'
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Failed to get user info from storage
      security:
      - ApiKeyAuth: []
      summary: Find user block info
      tags:
      - blocks
    patch:
      description: Blocks user until specified moment
      parameters:
      - description: User ID to block
        in: path
        name: user_id
        required: true
        type: string
      - description: Time to block until
        in: query
        name: until
        required: true
        type: string
      responses:
        "200":
          description: User blocked
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: 'Failed to block user '
      security:
      - ApiKeyAuth: []
      summary: Block user
      tags:
      - blocks
  /v1/login:
    post:
      consumes:
      - application/json
      description: Login to existing account
      parameters:
      - description: The body to create a thing
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      responses:
        "200":
          description: Login was successfull
          schema:
            $ref: '#/definitions/LoginResponse'
        "401":
          description: Login data is invalid or missing, check request
          schema:
            $ref: '#/definitions/Unauthorized'
      summary: User login
      tags:
      - auth
  /v1/models:
    get:
      description: Find such model info as id, username, email and fullname
      parameters:
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      - description: Page size for pagination
        in: query
        name: per_page
        type: integer
      responses:
        "200":
          description: Model info found
          schema:
            items:
              $ref: '#/definitions/model.Info'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "500":
          description: Failed to get model info from storage
      security:
      - ApiKeyAuth: []
      summary: Find models info
      tags:
      - models
    post:
      consumes:
      - multipart/form-data
      description: Adds such model info as title, structure, weights
      parameters:
      - description: Model Title to create
        in: formData
        name: title
        required: true
        type: string
      - description: Model Structure Title to add
        in: formData
        name: structure_title
        required: true
        type: string
      - description: Model Structure to add
        in: formData
        name: structure
        required: true
        type: file
      - description: Model Weights Title to add
        in: formData
        name: weights_title
        required: true
        type: string
      - description: Model Weights to add
        in: formData
        name: weights
        required: true
        type: file
      responses:
        "200":
          description: Model created
          schema:
            $ref: '#/definitions/model.Info'
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Invalid token, user id not specified
        "500":
          description: Failed to create model info
      security:
      - ApiKeyAuth: []
      summary: Create new model
      tags:
      - models
  /v1/models/{model_id}:
    delete:
      description: Deletes model info owned by authorized user
      parameters:
      - description: Model ID to delete
        in: path
        name: model_id
        required: true
        type: string
      responses:
        "200":
          description: Model info deleted
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Invalid token, user id not specified
        "404":
          description: Not Found
        "500":
          description: Failed to delete model info from storage
      security:
      - ApiKeyAuth: []
      summary: Delete model info
      tags:
      - models
    get:
      description: Find such model info as id, username, email and fullname
      parameters:
      - description: Model ID to search for
        in: path
        name: model_id
        required: true
        type: string
      responses:
        "200":
          description: Model info found
          schema:
            items:
              $ref: '#/definitions/model.Info'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Failed to get model info from storage
      security:
      - ApiKeyAuth: []
      summary: Find model info
      tags:
      - models
    patch:
      consumes:
      - multipart/form-data
      description: Update such model info as weights, weights titles
      parameters:
      - description: Model ID to update
        in: path
        name: model_id
        required: true
        type: string
      - description: Model Weights Title to set
        in: formData
        name: weights_title
        type: string
      - description: Model Weights to Update/Add
        in: formData
        name: weights
        type: file
      responses:
        "200":
          description: Model info updated
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Invalid token, user id not specified
        "404":
          description: Not Found
        "500":
          description: Failed to update model info
      security:
      - ApiKeyAuth: []
      summary: Update model info
      tags:
      - models
  /v1/models/stats:
    get:
      description: Get such model stat info as load and edit stat per period
      parameters:
      - description: Time to start from, RFC3339
        format: '"2006-01-02T15:04:05Z07:00"'
        in: query
        name: from
        type: string
      - description: Time to stop at, RFC3339
        format: '"2006-01-02T15:04:05Z07:00"'
        in: query
        name: to
        type: string
      - description: Search for load stat
        in: query
        name: load
        type: boolean
      - description: Search for update stats
        in: query
        name: update
        type: boolean
      responses:
        "200":
          description: Models stat info found
          schema:
            items:
              $ref: '#/definitions/ModelStatInfoResponse'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "500":
          description: Failed to get model stat info
      security:
      - ApiKeyAuth: []
      summary: Get models stat info
      tags:
      - models
  /v1/registration:
    post:
      consumes:
      - application/json
      description: register new user
      parameters:
      - description: The body to create a thing
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/RegistrationRequest'
      responses:
        "307":
          description: Registration was successfull, redirect request to login (/api/v1/login)
        "400":
          description: Registration data is invalid or missing, check request
          schema:
            $ref: '#/definitions/Unauthorized'
        "500":
          description: 'Failed to register user due to some reasons. For example:
            user already exists'
          schema:
            $ref: '#/definitions/Unauthorized'
      summary: User registration
      tags:
      - auth
  /v1/structures/{structure_id}/weights:
    get:
      description: Find such model info as id, username, email and fullname
      parameters:
      - description: Structure ID to search for
        in: query
        name: structure_id
        required: true
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      - description: Page size for pagination
        in: query
        name: per_page
        type: integer
      responses:
        "200":
          description: Model weights info found
          schema:
            items:
              $ref: '#/definitions/weights.Info'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Failed to get model weights info from storage
      security:
      - ApiKeyAuth: []
      summary: Find structure weights info
      tags:
      - weights
  /v1/users:
    get:
      consumes:
      - application/json
      description: Find such users info as id, username, email and fullname
      parameters:
      - description: Username to search for
        in: query
        name: username
        type: string
      - description: Email to search for
        in: query
        name: email
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      - description: Page size for pagination
        in: query
        name: per_page
        type: integer
      responses:
        "200":
          description: Users info found
          schema:
            items:
              $ref: '#/definitions/UserInfoResponse'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "500":
          description: Failed to get user info from storage
      security:
      - ApiKeyAuth: []
      summary: Find users info
      tags:
      - users
  /v1/users/{user_id}:
    get:
      consumes:
      - application/json
      description: Find such users info as id, username, email and fullname
      parameters:
      - description: UserId to search for
        in: query
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: Users info found
          schema:
            items:
              $ref: '#/definitions/UserInfoResponse'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Failed to get user info from storage
      security:
      - ApiKeyAuth: []
      summary: Find user info
      tags:
      - users
  /v1/users/{user_id}/models:
    get:
      description: Find such model info as id, username, email and fullname
      parameters:
      - description: User ID that owns models to search for
        in: path
        name: user_id
        required: true
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      - description: Page size for pagination
        in: query
        name: per_page
        type: integer
      responses:
        "200":
          description: Model info found
          schema:
            items:
              $ref: '#/definitions/model.Info'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Failed to get model info from storage
      security:
      - ApiKeyAuth: []
      summary: Find models info
      tags:
      - models
  /v1/users/stats:
    get:
      description: Get such user stat info as registration and edit stat per period
      parameters:
      - description: Time to start from, RFC3339
        format: '"2006-01-02T15:04:05Z07:00"'
        in: query
        name: from
        type: string
      - description: Time to stop at, RFC3339
        format: '"2006-01-02T15:04:05Z07:00"'
        in: query
        name: to
        type: string
      - description: Search for load stat
        in: query
        name: load
        type: boolean
      - description: Search for update stats
        in: query
        name: update
        type: boolean
      responses:
        "200":
          description: Users stat info found
          schema:
            items:
              $ref: '#/definitions/UserStatInfoResponse'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "500":
          description: Failed to get user stat info
      security:
      - ApiKeyAuth: []
      summary: Get users stat info
      tags:
      - users
  /v1/weights:
    post:
      consumes:
      - multipart/form-data
      description: Adds model weights info to existing model
      parameters:
      - description: Model ID to add weights to
        in: formData
        name: model_id
        required: true
        type: string
      - description: Model Weights to add
        in: formData
        name: weights
        required: true
        type: file
      responses:
        "200":
          description: Weights added
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Invalid token, user id not specified
        "500":
          description: Failed to create model weights info
      security:
      - ApiKeyAuth: []
      summary: Create new model weights info
      tags:
      - weights
  /v1/weights/{weight_id}:
    delete:
      description: Deletes model info from any user
      parameters:
      - description: Model ID to delete
        in: path
        name: weight_id
        required: true
        type: string
      responses:
        "200":
          description: Model info deleted
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Invalid token, user id not specified
        "404":
          description: Not Found
        "500":
          description: Failed to delete model info from storage
      security:
      - ApiKeyAuth: []
      summary: Delete model info
      tags:
      - weights
    get:
      description: Find such model weights info as id, name, link weights and neuron
        offsets
      parameters:
      - description: Weight ID to search for
        in: path
        name: weight_id
        required: true
        type: string
      responses:
        "200":
          description: Model weights info found
          schema:
            items:
              $ref: '#/definitions/weights.Info'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Failed to get model weights info from storage
      security:
      - ApiKeyAuth: []
      summary: Find model weights info
      tags:
      - weights
    patch:
      consumes:
      - multipart/form-data
      description: Update such model info as weights, weights titles
      parameters:
      - description: Model Weights ID to update
        in: path
        name: weight_id
        required: true
        type: string
      - description: Model Weights Title to set
        in: formData
        name: weight_title
        type: string
      - description: Model Weights to Update/Add
        in: formData
        name: weights
        type: file
      responses:
        "200":
          description: Model info updated
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Invalid token, user id not specified
        "404":
          description: Not Found
        "500":
          description: Failed to update model info
      security:
      - ApiKeyAuth: []
      summary: Update model info
      tags:
      - weights
  /v1/weights/stats:
    get:
      description: Get such user stat info as registration and edit stat per period
      parameters:
      - description: Time to start from, RFC3339
        format: '"2006-01-02T15:04:05Z07:00"'
        in: query
        name: from
        type: string
      - description: Time to stop at, RFC3339
        format: '"2006-01-02T15:04:05Z07:00"'
        in: query
        name: to
        type: string
      - description: Search for load stat
        in: query
        name: load
        type: boolean
      - description: Search for update stats
        in: query
        name: update
        type: boolean
      responses:
        "200":
          description: Users stat info found
          schema:
            items:
              $ref: '#/definitions/WeightStatInfoResponse'
            type: array
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "500":
          description: Failed to get user stat info
      security:
      - ApiKeyAuth: []
      summary: Get users stat info
      tags:
      - weights
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
